version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports: ["9092:9092"]
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: invest
      POSTGRES_USER: invest
      POSTGRES_PASSWORD: invest
    volumes: ["pgdata:/var/lib/postgresql/data"]
    ports: ["5432:5432"]
  redis:
    image: redis:7
    ports: ["6379:6379"]
  ingest:
    build: ./backend/ingest
    depends_on: [kafka]
    env_file: .env
  nlp-service:
    build: ./backend/nlp-service
    depends_on: [kafka]
    env_file: .env
  spark-job:
    build: ./backend/spark-job
    depends_on: [kafka, postgres]
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
  model-service:
    build: ./backend/model-service
    depends_on: [postgres]
    env_file: .env
    ports: ["8001:8001"]
  simulation-service:
    build: ./backend/simulation-service
    depends_on: [model-service]
    ports: ["8002:8002"]
  api-gateway:
    build: ./backend/api-gateway
    depends_on: [redis, postgres, model-service, simulation-service]
    env_file: .env
    ports: ["8000:8000"]
  web:
    image: nginx:1.25-alpine
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on: [api-gateway]
    ports: ["3000:80"]
volumes:
  pgdata:
